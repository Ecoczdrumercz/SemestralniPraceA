/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package semestralnipracec;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Iterator;
import java.util.Scanner;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author DanielP
 */
public class GuiAplikace extends javax.swing.JFrame {

    AbstrPriorQueue<Double, Mereni> prioritniFronta = new AbstrPriorQueue<>();
    int pocet = 0;

    public GuiAplikace() {
        initComponents();
        SpinnerModel model = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        SpinnerModel model2 = new SpinnerNumberModel(0, 0, 23, 1);
        jSpinner1.setModel(model);
        jSpinnerDo.setModel(model);
        jSpinner3.setModel(model2);
        jTextField1.setText("0.0");
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        jXDatePicker1.setFormats(dateFormat);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        vlozButton = new javax.swing.JButton();
        jXDatePicker2 = new org.jdesktop.swingx.JXDatePicker();
        jXDatePicker3 = new org.jdesktop.swingx.JXDatePicker();
        jSpinner1 = new javax.swing.JSpinner();
        jTextField1 = new javax.swing.JTextField();
        jSpinnerDo = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();
        nactiButton = new javax.swing.JButton();
        zrusButton = new javax.swing.JButton();
        iteratorButton = new javax.swing.JButton();
        odeberButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSpinnerOd = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        generujButton = new javax.swing.JButton();
        ulozButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addComponent(jScrollPane3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        vlozButton.setText("vloz");
        vlozButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vlozButtonActionPerformed(evt);
            }
        });

        jXDatePicker2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePicker2ActionPerformed(evt);
            }
        });

        jXDatePicker3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePicker3ActionPerformed(evt);
            }
        });

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jSpinnerDo.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        jSpinner3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jSpinner3PropertyChange(evt);
            }
        });

        nactiButton.setText("nacti mereni ze souboru");
        nactiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nactiButtonActionPerformed(evt);
            }
        });

        zrusButton.setText("zrus");
        zrusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zrusButtonActionPerformed(evt);
            }
        });

        iteratorButton.setText("iterator");
        iteratorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iteratorButtonActionPerformed(evt);
            }
        });

        odeberButton.setText("odeber prvek");
        odeberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                odeberButtonActionPerformed(evt);
            }
        });

        clearButton.setText("vycistit konzoli");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Id senzoru mereni");

        jLabel5.setText("Datum mereni");

        jLabel6.setText("Velikost mereni");

        jLabel7.setText("Hodina mereni");

        jSpinnerOd.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        jSpinnerOd.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jSpinnerOdPropertyChange(evt);
            }
        });

        jLabel8.setText("Datum mereni od");

        jLabel9.setText("Datum mereni do");

        generujButton.setText("generuj");
        generujButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generujButtonActionPerformed(evt);
            }
        });

        ulozButton.setText("uloz");
        ulozButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ulozButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vlozButton, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(zrusButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(iteratorButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(odeberButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clearButton))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jXDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinnerOd, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(59, 59, 59)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jXDatePicker3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinnerDo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jSpinner1, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(nactiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(generujButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ulozButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(vlozButton)
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerOd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXDatePicker3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(nactiButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generujButton)
                    .addComponent(ulozButton))
                .addGap(55, 55, 55)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zrusButton)
                    .addComponent(iteratorButton)
                    .addComponent(odeberButton)
                    .addComponent(clearButton)))
        );

        jLabel1.setText("Konzole");

        jLabel2.setText("Setrideny seznam");

        jLabel3.setText("Nesetrideny seznam");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jLabel1)
                        .addGap(261, 261, 261)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(93, 93, 93)))
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 2, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vlozButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vlozButtonActionPerformed
        try {

            Double m3 = Double.parseDouble(jTextField1.getText());              // pokus o parsovani, protoze jtextfield nemusi zaznamenat zmenu, pokud uzivatel nezmackne enter

            if (jXDatePicker1.getDate() != null && jSpinner1.getValue() != null) {

                String pattern = "yyyy-MM-dd";
                SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
                String dateString = simpleDateFormat.format(jXDatePicker1.getDate());
                DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern(pattern);
                LocalTime time = LocalTime.of((int) jSpinner3.getValue(), 0, 0);
                LocalDate date = LocalDate.parse(dateString, dateFormat);

                Mereni mereni = new Mereni(pocet, (int) jSpinner1.getValue(), LocalDateTime.of(date, time), m3);
                prioritniFronta.vloz(m3, mereni);

                jTextArea1.append("Uspesne vlozeny prvek \n");
                pocet++;
            }

        } catch (Exception e) {
            jTextArea1.append("Chyba\n");
        }


    }//GEN-LAST:event_vlozButtonActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        try {
            Double.parseDouble(jTextField1.getText());
        } catch (Exception e) {
            jTextField1.setText("0.0");
        }
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void zrusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zrusButtonActionPerformed
        prioritniFronta.zrus();
        jTextArea1.append("Prioritni fronta byla zrusena.\n");
        clearTextAreas();
        pocet = 0;
    }//GEN-LAST:event_zrusButtonActionPerformed

    private void odeberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_odeberButtonActionPerformed
        Mereni m = prioritniFronta.odeberMax();
        if (m == null) {
            jTextArea1.append("Ve fronte nic není");
        } else {
            jTextArea1.append("Byl odebrán prvek. \n");
            jTextArea1.append(m.toString() + "\n");
            iteratorButtonActionPerformed(evt);

        }
    }//GEN-LAST:event_odeberButtonActionPerformed

    private void jSpinner3PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jSpinner3PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinner3PropertyChange

    private void iteratorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iteratorButtonActionPerformed

        try {
            clearTextAreas();
            if (!prioritniFronta.jePrazdny()) {
                Iterator it = prioritniFronta.iterator();
                Iterator nesetridenyIt = prioritniFronta.vytvorIterator();

                while (it.hasNext()) {

                    jTextArea2.append(it.next().toString() + "\n");
                }
                while (nesetridenyIt.hasNext()) {

                    jTextArea3.append(nesetridenyIt.next().toString() + "\n");
                }
            }
        } catch (Exception e) {
            jTextArea1.append("Nejsou zadne data \n");
        }


    }//GEN-LAST:event_iteratorButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        jTextArea1.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void jXDatePicker2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker2ActionPerformed
        // pokud datum bude menší, jak datum od, tak nastaví na datum od
        // pokud datum bude větší, jak datum do, tak nastaví na datum do
    }//GEN-LAST:event_jXDatePicker2ActionPerformed

    private void jXDatePicker3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jXDatePicker3ActionPerformed

    private void jSpinnerOdPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jSpinnerOdPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerOdPropertyChange

    private void nactiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nactiButtonActionPerformed

try {
            File file = new File("data.csv");
            Scanner scanner = new Scanner(file);
            DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");

            while (scanner.hasNextLine()) {


                String data = scanner.nextLine();
                String[] pole = data.split(";");
                LocalDateTime dateTime = LocalDateTime.parse(pole[2],dateFormat);

                int mereni_id = Integer.parseInt(pole[0]);
                int senzor_id = Integer.parseInt(pole[1]);
                double m3 = Double.parseDouble(pole[3]);

                Mereni m = new Mereni(mereni_id, senzor_id, dateTime, m3);

                prioritniFronta.vloz(m.getM3(),m);


            }
            scanner.close();
        } catch (FileNotFoundException e) {
            System.out.println("Error");
            e.printStackTrace();
        }

//        try {
//            File file = new File("data.csv");
//            Scanner scanner = new Scanner(file);
//                
////                String pattern = "dd.MM.yyyy HH:mm:ss";
////                SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
////                String dateString = simpleDateFormat.format(jXDatePicker1.getDate());
//                DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm");
////                LocalTime time = LocalTime.of((int) jSpinner3.getValue(), 0, 0);
////                LocalDate date = LocalDate.parse(dateString, dateFormat);
////
////                LocalDateTime odDate = LocalDateTime.of(date, time);
////                LocalDateTime doDate = LocalDateTime.of(date, time);
////                
////            int compareDate = jXDatePicker2.getDate().compareTo(jXDatePicker3.getDate());
////                switch (compareDate) {
////                    case 0:
////                        int compareTime = LocalTime.of((int) jSpinnerOd.getValue(), 0, 0).compareTo(LocalTime.of((int) jSpinnerDo.getValue(), 0, 0));
////                        switch (compareTime) {
////                            case 1:
////                                if ()
////                                
////                                    break;
////                            case 0:
////                                break;
////                            default:
////                                break;
////                        }
////                        break;
////                    case 1:
////                        break;
////                    default:
////                        break;
////                }
//            
//            
//            while (scanner.hasNextLine()) {
//
//                String data = scanner.nextLine();
//                String[] pole = data.split(";");
//
//                LocalDateTime dateTime = LocalDateTime.parse(pole[2], dateFormat);
//                
////                String s = pole[2];
////                String[] times =  s.split(" ");
////                LocalDate ld =  LocalDate.parse(times[0], dateFormat);
////                LocalTime lt = LocalTime.parse(times[0], dateFormat);
//
//                // pokud kalendar ma stejne datum, tak musim jeste zjistit, ktery mensi nebo vetsi hodinu
//                // abych mohl dale urcit, ktery datum bude pred a po
//                
//
//                int mereni_id = Integer.parseInt(pole[0]);
//                int senzor_id = Integer.parseInt(pole[1]);
//                double m3 = Double.parseDouble(pole[3]);
//
//                Mereni m = new Mereni(mereni_id, senzor_id, dateTime, m3);
//
//                prioritniFronta.vloz(m.getM3(), m);
//
//            }
//            jTextArea1.append("Uspesne nactene prvky ze souboru\n");
//            scanner.close();
//        } catch (FileNotFoundException e) {
//            System.out.println("Error");
//            e.printStackTrace();
//        }
    }//GEN-LAST:event_nactiButtonActionPerformed

    private void generujButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generujButtonActionPerformed
        for (int i = 0; i < 10; i++) {                                          // metoda která vygeneruje nahodne mereni a vlozi je do PF
            int randCislo = (int) (Math.random() * 100) + 0;                    // vytvori nahodny id_senzor
            long randDatum = (long) (Math.random() * 100000) + (-100000);       // vytvori nahodne cislo, ktere se odecte od dnesniho data v systemu
            Mereni value = new Mereni(pocet, randCislo, LocalDateTime.now() // vytvoreni noveho mereni
                    .plusSeconds(randDatum), (Math.random() * 100) + 0);
            prioritniFronta.vloz(value.getM3(), value);
            pocet++;
            jTextArea1.append("Uspesne vlozeny prvek \n");
        }
    }//GEN-LAST:event_generujButtonActionPerformed

    private void ulozButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ulozButtonActionPerformed
        try {
            File myObj = new File("data.csv");
            if (myObj.createNewFile()) {
                FileWriter writer = new FileWriter("data.csv");
                Iterator itSetrideny = prioritniFronta.iterator();
                Iterator itNesetrideny = prioritniFronta.vytvorIterator();
                while (itSetrideny.hasNext()) {
                    writer.write(itSetrideny.next().toString() + "\n");
                }
                while (itNesetrideny.hasNext()) {
                    writer.write(itNesetrideny.next().toString() + "\n");
                }
                writer.close();

            } else {
                File file = new File("data.csv");
                file.delete();
                FileWriter writer = new FileWriter("data.csv");
                Iterator itSetrideny = prioritniFronta.iterator();
                Iterator itNesetrideny = prioritniFronta.vytvorIterator();
                while (itSetrideny.hasNext()) {
                    writer.write(itSetrideny.next().toString() + "\n");
                }
                while (itNesetrideny.hasNext()) {
                    writer.write(itNesetrideny.next().toString() + "\n");
                }
                writer.close();
            }
        } catch (IOException e) {
            System.out.println("Error");
            e.printStackTrace();
        }
    }//GEN-LAST:event_ulozButtonActionPerformed

    private void clearTextAreas() {
        jTextArea2.setText("");
        jTextArea3.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiAplikace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiAplikace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiAplikace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiAplikace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiAplikace().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JButton generujButton;
    private javax.swing.JButton iteratorButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinnerDo;
    private javax.swing.JSpinner jSpinnerOd;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker2;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker3;
    private javax.swing.JButton nactiButton;
    private javax.swing.JButton odeberButton;
    private javax.swing.JButton ulozButton;
    private javax.swing.JButton vlozButton;
    private javax.swing.JButton zrusButton;
    // End of variables declaration//GEN-END:variables
}
